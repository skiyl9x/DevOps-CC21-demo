apiVersion: v1
kind: Pod
metadata:
  name: mysql-configuration
  namespace: database
  annotations:
    vault.hashicorp.com/agent-inject: 'true'
    vault.hashicorp.com/role: 'vault-mysql-ar'
    vault.hashicorp.com/agent-inject-secret-init.sh: 'secret/wp/db/config'
    vault.hashicorp.com/agent-inject-template-init.sh: | 
        {{- with secret "secret/wp/db/config" -}}
        HOST="mysql-set-0.mysql.database.svc.cluster.local"
        MYSQL_ROOT_PASSWORD={{ .Data.data.MYSQL_ROOT_PASSWORD }}
        MYSQL_DATABASE={{ .Data.data.MYSQL_DATABASE }}
        MYSQL_USER={{ .Data.data.MYSQL_USER}}
        MYSQL_PASSWORD={{ .Data.data.MYSQL_PASSWORD }}

        mysql -uroot -p$MYSQL_ROOT_PASSWORD_old -h$HOST  -e "show databases;" 1>/dev/null 2>&1

        if [ "$?" -eq "0" ];
        then
            echo "MYSQL_ROOT_PASSWORD has changed. "
            mysql -uroot -p$MYSQL_ROOT_PASSWORD_old -h$HOST << EOF 
        ALTER USER 'root'@'%' IDENTIFIED BY '$MYSQL_ROOT_PASSWORD';
        ALTER USER 'root'@'localhost' IDENTIFIED BY '$MYSQL_ROOT_PASSWORD';
        FLUSH PRIVILEGES;
        EOF
        fi

        mysql -uroot -p$MYSQL_ROOT_PASSWORD -h$HOST << EOF
        CREATE DATABASE IF NOT EXISTS $MYSQL_DATABASE;
        CREATE USER IF NOT EXISTS '$MYSQL_USER' @'%';
        ALTER USER '$MYSQL_USER' @'localhost' IDENTIFIED BY '$MYSQL_PASSWORD';
        ALTER USER '$MYSQL_USER' @'%' IDENTIFIED BY '$MYSQL_PASSWORD';
        GRANT ALL PRIVILEGES ON $MYSQL_DATABASE . * TO '$MYSQL_USER' @'%';
        FLUSH PRIVILEGES;
        \! echo 'Information in MySQL DB has changed. Congrats!';
        EOF
        {{- end -}}
spec:
  serviceAccountName: vault-mysql-sa
  containers:
  - name: mysql-container
    image: imega/mysql-client
    args:
      ['sh', '-c', 'sh /vault/secrets/init.sh && tail -f /dev/null']
    imagePullPolicy: IfNotPresent
    env:
    - name: MYSQL_ROOT_PASSWORD_old
      valueFrom:
       secretKeyRef:
        name: mysql-password
        key: MYSQL_ROOT_PASSWORD
